trigger:
- master  # A pipeline será acionada em commits na branch master

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    sudo apt update
    sudo apt install -y openjdk-21-jdk
    sudo update-alternatives --set java /usr/lib/jvm/java-21-openjdk-amd64/bin/java
    
    # Definir JAVA_HOME e adicionar ao PATH
    export JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64
    export PATH=$JAVA_HOME/bin:$PATH
    echo "JAVA_HOME is set to: $JAVA_HOME"

    # Persistir a configuração do JAVA_HOME no sistema
    echo "JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64" | sudo tee -a /etc/environment
    
    # Verificar se o Java está corretamente instalado
    java -version
  displayName: 'Instalar e definir Java 21 como padrão'

# Executar Maven clean package
- script: |
    # Garantir que JAVA_HOME e PATH estejam corretos
    export JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64
    export PATH=$JAVA_HOME/bin:$PATH
    echo "Using JAVA_HOME: $JAVA_HOME"

    # Verificar a versão do Java e do Maven antes da compilação
    java -version
    mvn -version

    # Executar o build
    cd demo
    mvn clean package
  displayName: 'Build com Maven'

# Configurar Git com suas credenciais
- script: |
    git config --global user.email "heitorbrunini.ifpb@gmail.com"
    git config --global user.name "heitorbrunini"
  displayName: 'Configurar Git'

# Adicionar os arquivos gerados no target/ ao controle de versão
- script: |
    git add .
    git diff --staged --quiet || git commit -m "Commit automático: arquivos gerados pelo Maven"
  displayName: 'Commit dos arquivos gerados'


- script: |
    git remote set-url origin https://$(GITHUB_PAT)@github.com/heitorbrunini/demo.git
    git branch -M master
    git push
  displayName: 'Push dos arquivos para o repositório'
  env:
    GITHUB_PAT: $(GITHUB_PAT)
